#!/bin/bash
#
# custom_tomcat      This shell script takes care of starting and stopping Risk-IM Tomcat instances.
#
# chkconfig: 2345 99 20
# description: This script starts the Risk-IM Tomcat daemons. This is a wrapper script generated by Puppet.
#
### BEGIN INIT INFO
# Provides: custom_tomcat
# Required-Start: $network $syslog
# Required-Stop: $network $syslog
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Description: This script starts the Risk-IM Tomcat daemons.
# Short-Description: start and stop Risk-IM Tomcat daemons
### END INIT INFO
#
# - originally written by Stephane Lapie
#

## Source function library.
. /etc/rc.d/init.d/functions

DNAME="custom_tomcat"
# log file for sub-services already exists
LOG_FILE=/dev/null

function start() {
    echo -n "Starting ${DNAME} processes:"
<%
   i = 0
   @instances.sort.each do |instance, opt|
     id = opt['clone'].nil? ? 0 : opt['clone'].to_i
     id.downto(0) do |n|
     inst = i + n
     next if opt['ensure'].nil? == false and opt['ensure'] != 'present'
-%>
    [ "$RETVAL" -eq "0" ] && /sbin/service custom_<%= instance %><%= inst %> start >> $LOG_FILE 2>&1 || RETVAL="4"
<%-  end
     i += 1
   end %>
    if [ "$RETVAL" -eq "0" ]; then 
        success
    else
        echo -n "Error code ${RETVAL}"
        failure
    fi
    echo
}

function stop() {
    echo -n "Stopping Risk-IM tomcat processes:"
<%
   i = 0
   @instances.sort.each do |instance, opt|
     id = opt['clone'].nil? ? 0 : opt['clone'].to_i
     id.downto(0) do |n|
       inst = i + n
       next if opt['ensure'].nil? == false and opt['ensure'] != 'present'
-%>
    /sbin/service custom_<%= instance %><%= inst %> stop >> $LOG_FILE 2>&1 || RETVAL="4"
<%-  end
     i += 1
   end %>
    if [ "$RETVAL" -eq "0" ]; then
        success
    else
        echo -n "Error code ${RETVAL}"
        failure
    fi
    echo
}

function status() {
    RETVAL=3
<%
   i = 0
   @instances.sort.each do |instance, opt|
     id = opt['clone'].nil? ? 0 : opt['clone'].to_i
     id.downto(0) do |n|
       inst = i + n
       next if opt['ensure'].nil? == false and opt['ensure'] != 'present'
-%>
    [ "$RETVAL" -eq "3" ] && { /sbin/service custom_<%= instance %><%= inst %> status >> $LOG_FILE 2>&1 ; RETVAL=$? ; }
<%-   end
      i += 1
    end %>
    if [ "$RETVAL" -eq "0" ]; then
        echo -n "$DNAME (pid undef) is running..."
    else
        echo -n "$DNAME is stopped"
    fi
    success
    echo 
}

function usage()
{
   echo "Usage: $0 {start|stop|restart|condrestart|try-restart|reload|force-reload|status|version}"
   RETVAL="2"
}

RETVAL="0"
case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    restart|condrestart|try-restart|force-reload)
        stop
        start
        ;;
    reload)
        RETVAL="3"
        ;;
    status)
        status
        ;;
    version)
        echo "0.1"
        ;;
    *)
      usage
      ;;
esac

exit $RETVAL
